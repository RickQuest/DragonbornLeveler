name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.12]
        label: [win-64]
        prefix: ["C:\\Users\\runneradmin\\miniconda3\\envs\\dragonbornleveler"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: dragonbornleveler
          use-mamba: true

      - name: Cache conda environment
        uses: actions/cache@v3
        with:
          path: ${{ matrix.prefix }}
          key: conda-${{ runner.os }}-Python${{ matrix.python-version }}-${{ hashFiles('environment.yml') }}
        id: conda-cache

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.os == 'Windows' && 'C:\\Users\\runneradmin\\AppData\\Local\\pip\\Cache' }}
          key: pip-${{ runner.os }}-Python${{ matrix.python-version }}-${{ hashFiles('environment.yml') }}

      - name: Update environment
        if: steps.conda-cache.outputs.cache-hit != 'true'
        run: mamba env update -n dragonbornleveler -f environment.yml

      - name: Install Tesseract-OCR
        if: runner.os == 'Windows'
        run: choco install tesseract

      - name: Add Tesseract to PATH
        if: runner.os == 'Windows'
        run: echo "C:\Program Files\Tesseract-OCR" | Out-File -Append -FilePath $env:GITHUB_PATH

      - name: Activate Conda Environment
        run: conda activate dragonbornleveler

      - name: Run tests
        run: pytest  # Replace with your testing framework if different
